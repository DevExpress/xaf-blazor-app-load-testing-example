name: Build and Run Application

on:
  workflow_dispatch:
    pull_request:
    branches: [ main ]

env:
  VM_MEMORY: 2600
  VM_CPU: 4
#   VM_IMAGE: WIN10

jobs:
  run:
    runs-on: farm
    strategy:
      matrix:
        oses: [UBUNTU]
    env:
      VM_IMAGE: ${{ matrix.oses }}
    # runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 30
    steps:
      - name: Get ip
        run: echo "LOCAL_IP_ADDRESS=$(ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p')" >> $GITHUB_ENV
      - name: Show IP
        run: echo ${{ env.LOCAL_IP_ADDRESS }}
      - name: Checkout
        uses: ./../../checkout
      - name: Use Node.js
        run: |
          curl -sL https://deb.nodesource.com/setup_16.x -o /tmp/nodesource_setup.sh
          sudo bash /tmp/nodesource_setup.sh
          sudo apt install nodejs
        # uses: actions/setup-node@v2
        # with:
        #   node-version: '14.x'
      - name: Set npm registry
        run: npm config set registry https://registry.npmjs.org/
      - name: Install sqlite
        run: sudo npm i -g sqlite3
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Add DevExpress NuGet Package Source
        run: dotnet nuget add source ${{ secrets.DEVEXPRESS_NUGET_URL }}
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Update database
        run: dotnet run --project LoadTestingApp.Blazor.Server --updateDatabase --forceUpdate --silent
      # - name: Generate Certificate
      #   run: dotnet dev-certs https
      # - name: Trust certificate
      #   run: dotnet dev-certs https --trust
      - name: Install Packages
        run: npm i
      - name: Run application
        run: dotnet run --project LoadTestingApp.Blazor.Server &
      # - name: Run Tests
      #   run: node ./tests/index.js localhost 10
      #   shell: cmd
      # - name: Run tests
      #   uses: aurelien-baudet/workflow-dispatch@v2
      #   with:
      #     workflow: Load Testing
      #     token: ${{ secrets.PERSONAL_TOKEN }}
      #     wait-for-completion: true
      #     inputs: '{ "appUrl": "172.21.86.132" }'